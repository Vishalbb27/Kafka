<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.admin.NewTopic"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.TopicBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatusCode"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="com.appdeveloperblog.ws.products.model.CreateProductRestModel"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.appdeveloperblog.ws.products.rest.ProductController"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="com.appdeveloperblog.ws.products.service.ProductService"/>
    <fullyQualifiedTypeName name="com.appdeveloperblog.ws.products.service.ProductServiceImpl"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="java.util.concurrent.CompletableFuture"/>
    <fullyQualifiedTypeName name="jakarta.websocket.SendResult"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.SendResult"/>
    <fullyQualifiedTypeName name="com.appdeveloperblog.ws.products.service.ProductCreatedEvent"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="javax.xml.crypto.Data"/>
    <fullyQualifiedTypeName name="java.sql.Date"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="com.appdeveloperblog.ws.products.model.ErrorMessage"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaHandler"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="com.appdeveloperblog.ws.core.ProductCreatedEvent"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.DefaultKafkaConsumerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.deser.std.StringDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.JsonSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.JsonDeserializer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.ConsumerConfig"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ConsumerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/>
</qualifiedTypeNameHistroy>
